<application>
  <component name="LanguageInjectionConfiguration">
    <injection language="JAVA" injector-id="java">
      <display-name>AbstractCharSequenceAssert.contains (org.assertj.core.api)</display-name>
      <single-file value="false" />
      <place><![CDATA[psiParameter().ofMethod(0, psiMethod().withName("contains").withParameters("java.lang.CharSequence...").definedInClass("org.assertj.core.api.AbstractCharSequenceAssert"))]]></place>
    </injection>
    <injection language="JSON" injector-id="java">
      <display-name>AuthorizerResource.handleRequest (lambda)</display-name>
      <single-file value="false" />
      <place><![CDATA[psiMethod().withName("handleRequest").withParameters("com.amazonaws.services.lambda.runtime.events.APIGatewayCustomAuthorizerEvent", "com.amazonaws.services.lambda.runtime.Context").definedInClass("lambda.AuthorizerResource")]]></place>
    </injection>
    <injection language="JSON" injector-id="java">
      <display-name>Jsonb.fromJson (jakarta.json.bind)</display-name>
      <single-file value="false" />
      <place><![CDATA[psiParameter().ofMethod(0, psiMethod().withName("fromJson").withParameters("java.lang.String", "java.lang.Class").definedInClass("jakarta.json.bind.Jsonb"))]]></place>
    </injection>
    <injection language="JSON" injector-id="java">
      <display-name>ObjectMapper (com.fasterxml.jackson.databind)</display-name>
      <single-file value="true" />
      <place><![CDATA[psiParameter().ofMethod(0, psiMethod().withName("readTree").withParameters("java.lang.String").definedInClass("com.fasterxml.jackson.databind.ObjectMapper"))]]></place>
      <place><![CDATA[psiParameter().ofMethod(0, psiMethod().withName("readValue").withParameters("java.lang.String", "java.lang.Class").definedInClass("com.fasterxml.jackson.databind.ObjectMapper"))]]></place>
    </injection>
  </component>
</application>